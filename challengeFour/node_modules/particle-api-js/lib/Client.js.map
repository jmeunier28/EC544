{"version":3,"sources":["../src/Client.js"],"names":[],"mappings":"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","file":"Client.js","sourcesContent":["import Particle from './Particle';\nimport Library from './Library';\n\nexport default class Client {\n\tconstructor({ auth, api = new Particle() }) {\n\t\tObject.assign(this, { auth, api });\n\t}\n\n\t/**\n\t * Get firmware library objects\n\t * @param  {Object} query The query parameters for libraries. See Particle.listLibraries\n\t * @return {Promise}\n\t */\n\tlibraries(query = {}) {\n\t\treturn this.api.listLibraries(Object.assign({}, query, { auth: this.auth }))\n\t\t.then(payload => {\n\t\t\tconst libraries = payload.body.data || [];\n\t\t\treturn libraries.map(l => new Library(this, l));\n\t\t});\n\t}\n\n\t/**\n\t * Get one firmware library object\n\t * @param  {String} name Name of the library to fetch\n\t * @param  {Object} query The query parameters for libraries. See Particle.getLibrary\n\t * @return {Promise}\n\t */\n\tlibrary(name, query = {}) {\n\t\treturn this.api.getLibrary(Object.assign({}, query, { name, auth: this.auth }))\n\t\t\t.then(payload => {\n\t\t\t\tconst library = payload.body.data || {};\n\t\t\t\treturn new Library(this, library);\n\t\t\t});\n\t}\n\n\t/**\n\t * Get list of library versions\n\t * @param  {String} name Name of the library to fetch\n\t * @param  {Object} query The query parameters for versions. See Particle.getLibraryVersions\n\t * @return {Promise}\n\t */\n\tlibraryVersions(name, query = {}) {\n\t\treturn this.api.getLibraryVersions(Object.assign({}, query, { name, auth: this.auth }))\n\t\t\t.then(payload => {\n\t\t\t\tconst libraries = payload.body.data || [];\n\t\t\t\treturn libraries.map(l => new Library(this, l));\n\t\t\t});\n\t}\n\n\t/**\n\t * Publish a new library version\n\t * @param  {Buffer} archive The compressed archive with the library source\n\t * @return {Promise}\n\t */\n\tcontributeLibrary(archive) {\n\t\treturn this.api.contributeLibrary({ archive, auth: this.auth })\n\t\t\t.then(payload => {\n\t\t\t\tconst library = payload.body.data || {};\n\t\t\t\treturn new Library(this, library);\n\t\t\t}, error => {\n\t\t\t\tthis._throwError(error);\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Delete an entire published library\n\t * @param  {String} $0.name Name of the library to delete\n\t * @param  {String} $0.force Key to force deleting a public library\n\t * @return {Promise}\n\t */\n\tdeleteLibrary({ name, version, force }) {\n\t\treturn this.api.deleteLibrary({ name, force, auth: this.auth })\n\t\t\t.then(payload => {\n\t\t\t\treturn true;\n\t\t\t}, error => {\n\t\t\t\tthis._throwError(error);\n\t\t\t});\n\t}\n\n\t_throwError(error) {\n\t\tif (error.body && error.body.errors) {\n\t\t\tconst errorMessages = error.body.errors.map((e) => e.message).join('\\n');\n\t\t\tthrow new Error(errorMessages);\n\t\t}\n\t\tthrow error;\n\t}\n\n\tdownloadFile(url) {\n\t\treturn this.api.downloadFile({ url });\n\t}\n\n\tcompileCode(files, platformId, targetVersion) {\n\t\treturn this.api.compileCode({ files, platformId, targetVersion, auth: this.auth });\n\t}\n}\n"]}